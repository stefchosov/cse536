boolean
a
.

boolean b.

integer c.

void d.

struct t1 t3.

struct t1 [ integer i1. boolean b2. ]

struct t2 [integer i2. struct t1 t2.]

void test_func[] [
    boolean b.
    integer i.
    struct t1 t3.
    i++.
    t3:i1--.
]

integer test_exp[integer p1,
boolean p2,
void p3]
[
    boolean b. integer i.
    p1++. p3--.
    t3:b2:elem3++.
    input -> p3.
    p1 = TRUE . t3:t1 = 123.
    t3:t2 = "string\nvalue". b=FALSE.
    disp <- 123 . disp <- "stefcho".
    disp <- p1.
    p1 = p2 = 12.
    t3:b2 = b * 2 + 3.
    b = ^ p1 + 4 & -p2 == 4.
    c = -p / 3 + a < i - 2 * 5.
    x = 4+3*5-y.
    n1 = b <= c | ^t:d ^= 34 & a == 5 | c1:c2:c+3 >= 8.
    n1 = b | (n2 = 5).
    n1 = f(2,3,4).
    n1 = f1(b < c, f2(2,3) + 4, f3()).
]

void test_stmt[ integer i1 ]
[
    return. return x/ 2 == ^n.
    if (a < -1) {
        x = 3.
        if (t == fname(s) + 1) { struct t2 t4. t4:i++. }
    }
    if (b == -1) { x = 4+3*5-y. while (c) { y = y*2+x. } } else { x = 0. }
    f().f(a, 1 == i, t:e + w * 5).
]

void test_stmt[ integer i1 ] [ return. return x/ 2 == ^n. if (a < -1) { x = 3.if (t == fname(s) + 1) { struct t2 t4. t4:i++. }} if (b == -1) { x = 4+3*5-y. while (c) { y = y*2+x. } } else { x = 0. } f().f(a, 1 == i, t:e + w * 5).]
